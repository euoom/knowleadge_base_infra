services:
  postgres:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: ${DB_POSTGRESDB_DATABASE}
      POSTGRES_USER: ${DB_POSTGRESDB_USER}
      POSTGRES_PASSWORD: ${DB_POSTGRESDB_PASSWORD}
      LANG: en_US.utf8
      LANGUAGE: en_US:en
      LC_ALL: en_US.utf8
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - internal_network

  n8n:
    ports:
      - '5678:5678'
    image: docker.n8n.io/n8nio/n8n
    restart: always
    environment:
      N8N_HOST: ${DOMAIN_NAME}
      N8N_PORT: 5678
      N8N_PROTOCOL: https
      NODE_ENV: production
      WEBHOOK_URL: https://${DOMAIN_NAME}/
      GENERIC_TIMEZONE: Asia/Seoul
      TZ: Asia/Seoul
      N8N_RUNNERS_ENABLED: true
      DB_TYPE: postgresdb
      DB_POSTGRESDB_DATABASE: ${DB_POSTGRESDB_DATABASE}
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_USER: ${DB_POSTGRESDB_USER}
      DB_POSTGRESDB_SCHEMA: public
      DB_POSTGRESDB_PASSWORD: ${DB_POSTGRESDB_PASSWORD}
      LANG: en_US.utf8
      LANGUAGE: en_US:en
      LC_ALL: en_US.utf8
    volumes:
      - ./n8n_data:/home/node/.n8n
    networks:
      - internal_network
    depends_on:
      - postgres

  discord_bot:
    container_name: knowleadge_base_discord
    restart: unless-stopped
    ports:
      - '8000:8000'
    build:
      context: ../knowleadge_base_discord
      dockerfile: Dockerfile
    networks:
      - internal_network

  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx-proxy-manager
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "81:81"
    volumes:
      - ./npm_data:/data
      - ./npm_letsencrypt:/etc/letsencrypt
    networks:
      - internal_network
    depends_on:
      - n8n
      - discord_bot

networks:
  internal_network:
