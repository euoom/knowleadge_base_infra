services:
  discord_bot:
    container_name: knowleadge_base_discord
    restart: unless-stopped
    build:
      context: ../knowleadge_base_discord
      dockerfile: Dockerfile
    networks:
      - internal_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.discordbot.rule=Host(`${BOT_DOMAIN_NAME}`)"
      - "traefik.http.routers.discordbot.entrypoints=websecure"
      - "traefik.http.routers.discordbot.tls.certresolver=myresolver"
      - "traefik.http.services.discordbot.loadbalancer.server.port=8000"

  postgres:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: ${DB_POSTGRESDB_DATABASE}
      POSTGRES_USER: ${DB_POSTGRESDB_USER}
      POSTGRES_PASSWORD: ${DB_POSTGRESDB_PASSWORD}
      LANG: en_US.utf8
      LANGUAGE: en_US:en
      LC_ALL: en_US.utf8
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - internal_network

  n8n:
    image: docker.n8n.io/n8nio/n8n
    restart: always
    environment:
      N8N_HOST: ${DOMAIN_NAME}
      N8N_PORT: 5678
      N8N_PROTOCOL: https
      NODE_ENV: production
      WEBHOOK_URL: https://${DOMAIN_NAME}/
      GENERIC_TIMEZONE: Asia/Seoul
      TZ: Asia/Seoul
      N8N_RUNNERS_ENABLED: true
      DB_TYPE: postgresdb
      DB_POSTGRESDB_DATABASE: ${DB_POSTGRESDB_DATABASE}
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_USER: ${DB_POSTGRESDB_USER}
      DB_POSTGRESDB_SCHEMA: public
      DB_POSTGRESDB_PASSWORD: ${DB_POSTGRESDB_PASSWORD}
      LANG: en_US.utf8
      LANGUAGE: en_US:en
      LC_ALL: en_US.utf8
    volumes:
      - ./n8n_data:/home/node/.n8n
    networks:
      - internal_network
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`${DOMAIN_NAME}`)"
      - "traefik.http.routers.n8n.entrypoints=websecure"
      - "traefik.http.routers.n8n.tls.certresolver=myresolver"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"

  traefik:
    image: "traefik:v3.0"
    container_name: "traefik"
    restart: unless-stopped
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "//./pipe/docker_engine:/var/run/docker.sock"
      - "./traefik_letsencrypt:/letsencrypt"
    networks:
      - internal_network

networks:
  internal_network:
